// Code generated by protoc-gen-go. DO NOT EDIT.
// source: virtualchannelsrpc/virtualchannels.proto

package virtualchannelsrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateVirtualChannelRequest struct {
	NodePubKey           []byte   `protobuf:"bytes,1,opt,name=node_pub_key,json=nodePubKey,proto3" json:"node_pub_key,omitempty"`
	ChannelId            []byte   `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVirtualChannelRequest) Reset()         { *m = CreateVirtualChannelRequest{} }
func (m *CreateVirtualChannelRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVirtualChannelRequest) ProtoMessage()    {}
func (*CreateVirtualChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{0}
}

func (m *CreateVirtualChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVirtualChannelRequest.Unmarshal(m, b)
}
func (m *CreateVirtualChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVirtualChannelRequest.Marshal(b, m, deterministic)
}
func (m *CreateVirtualChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVirtualChannelRequest.Merge(m, src)
}
func (m *CreateVirtualChannelRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVirtualChannelRequest.Size(m)
}
func (m *CreateVirtualChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVirtualChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVirtualChannelRequest proto.InternalMessageInfo

func (m *CreateVirtualChannelRequest) GetNodePubKey() []byte {
	if m != nil {
		return m.NodePubKey
	}
	return nil
}

func (m *CreateVirtualChannelRequest) GetChannelId() []byte {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

type CreateVirtualChannelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVirtualChannelResponse) Reset()         { *m = CreateVirtualChannelResponse{} }
func (m *CreateVirtualChannelResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVirtualChannelResponse) ProtoMessage()    {}
func (*CreateVirtualChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{1}
}

func (m *CreateVirtualChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVirtualChannelResponse.Unmarshal(m, b)
}
func (m *CreateVirtualChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVirtualChannelResponse.Marshal(b, m, deterministic)
}
func (m *CreateVirtualChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVirtualChannelResponse.Merge(m, src)
}
func (m *CreateVirtualChannelResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVirtualChannelResponse.Size(m)
}
func (m *CreateVirtualChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVirtualChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVirtualChannelResponse proto.InternalMessageInfo

type SubscribeVirtualForwardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeVirtualForwardRequest) Reset()         { *m = SubscribeVirtualForwardRequest{} }
func (m *SubscribeVirtualForwardRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeVirtualForwardRequest) ProtoMessage()    {}
func (*SubscribeVirtualForwardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{2}
}

func (m *SubscribeVirtualForwardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeVirtualForwardRequest.Unmarshal(m, b)
}
func (m *SubscribeVirtualForwardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeVirtualForwardRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeVirtualForwardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeVirtualForwardRequest.Merge(m, src)
}
func (m *SubscribeVirtualForwardRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeVirtualForwardRequest.Size(m)
}
func (m *SubscribeVirtualForwardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeVirtualForwardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeVirtualForwardRequest proto.InternalMessageInfo

type VirtualForward struct {
	ChannelId            []byte   `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Htlc                 []byte   `protobuf:"bytes,2,opt,name=htlc,proto3" json:"htlc,omitempty"`
	Timeout              int64    `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualForward) Reset()         { *m = VirtualForward{} }
func (m *VirtualForward) String() string { return proto.CompactTextString(m) }
func (*VirtualForward) ProtoMessage()    {}
func (*VirtualForward) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{3}
}

func (m *VirtualForward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualForward.Unmarshal(m, b)
}
func (m *VirtualForward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualForward.Marshal(b, m, deterministic)
}
func (m *VirtualForward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualForward.Merge(m, src)
}
func (m *VirtualForward) XXX_Size() int {
	return xxx_messageInfo_VirtualForward.Size(m)
}
func (m *VirtualForward) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualForward.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualForward proto.InternalMessageInfo

func (m *VirtualForward) GetChannelId() []byte {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *VirtualForward) GetHtlc() []byte {
	if m != nil {
		return m.Htlc
	}
	return nil
}

func (m *VirtualForward) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type SettleVirtualForwardRequest struct {
	ChannelId            []byte   `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Preimage             []byte   `protobuf:"bytes,2,opt,name=preimage,proto3" json:"preimage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleVirtualForwardRequest) Reset()         { *m = SettleVirtualForwardRequest{} }
func (m *SettleVirtualForwardRequest) String() string { return proto.CompactTextString(m) }
func (*SettleVirtualForwardRequest) ProtoMessage()    {}
func (*SettleVirtualForwardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{4}
}

func (m *SettleVirtualForwardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleVirtualForwardRequest.Unmarshal(m, b)
}
func (m *SettleVirtualForwardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleVirtualForwardRequest.Marshal(b, m, deterministic)
}
func (m *SettleVirtualForwardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleVirtualForwardRequest.Merge(m, src)
}
func (m *SettleVirtualForwardRequest) XXX_Size() int {
	return xxx_messageInfo_SettleVirtualForwardRequest.Size(m)
}
func (m *SettleVirtualForwardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleVirtualForwardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SettleVirtualForwardRequest proto.InternalMessageInfo

func (m *SettleVirtualForwardRequest) GetChannelId() []byte {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *SettleVirtualForwardRequest) GetPreimage() []byte {
	if m != nil {
		return m.Preimage
	}
	return nil
}

type SettleVirtualForwardResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleVirtualForwardResponse) Reset()         { *m = SettleVirtualForwardResponse{} }
func (m *SettleVirtualForwardResponse) String() string { return proto.CompactTextString(m) }
func (*SettleVirtualForwardResponse) ProtoMessage()    {}
func (*SettleVirtualForwardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{5}
}

func (m *SettleVirtualForwardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleVirtualForwardResponse.Unmarshal(m, b)
}
func (m *SettleVirtualForwardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleVirtualForwardResponse.Marshal(b, m, deterministic)
}
func (m *SettleVirtualForwardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleVirtualForwardResponse.Merge(m, src)
}
func (m *SettleVirtualForwardResponse) XXX_Size() int {
	return xxx_messageInfo_SettleVirtualForwardResponse.Size(m)
}
func (m *SettleVirtualForwardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleVirtualForwardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SettleVirtualForwardResponse proto.InternalMessageInfo

type DeleteVirtualChannelRequest struct {
	NodePubKey           []byte   `protobuf:"bytes,1,opt,name=node_pub_key,json=nodePubKey,proto3" json:"node_pub_key,omitempty"`
	ChannelId            []byte   `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVirtualChannelRequest) Reset()         { *m = DeleteVirtualChannelRequest{} }
func (m *DeleteVirtualChannelRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVirtualChannelRequest) ProtoMessage()    {}
func (*DeleteVirtualChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{6}
}

func (m *DeleteVirtualChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVirtualChannelRequest.Unmarshal(m, b)
}
func (m *DeleteVirtualChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVirtualChannelRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVirtualChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVirtualChannelRequest.Merge(m, src)
}
func (m *DeleteVirtualChannelRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVirtualChannelRequest.Size(m)
}
func (m *DeleteVirtualChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVirtualChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVirtualChannelRequest proto.InternalMessageInfo

func (m *DeleteVirtualChannelRequest) GetNodePubKey() []byte {
	if m != nil {
		return m.NodePubKey
	}
	return nil
}

func (m *DeleteVirtualChannelRequest) GetChannelId() []byte {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

type DeleteVirtualChannelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVirtualChannelResponse) Reset()         { *m = DeleteVirtualChannelResponse{} }
func (m *DeleteVirtualChannelResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVirtualChannelResponse) ProtoMessage()    {}
func (*DeleteVirtualChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{7}
}

func (m *DeleteVirtualChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVirtualChannelResponse.Unmarshal(m, b)
}
func (m *DeleteVirtualChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVirtualChannelResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVirtualChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVirtualChannelResponse.Merge(m, src)
}
func (m *DeleteVirtualChannelResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVirtualChannelResponse.Size(m)
}
func (m *DeleteVirtualChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVirtualChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVirtualChannelResponse proto.InternalMessageInfo

type ListVirtualChannelsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVirtualChannelsRequest) Reset()         { *m = ListVirtualChannelsRequest{} }
func (m *ListVirtualChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*ListVirtualChannelsRequest) ProtoMessage()    {}
func (*ListVirtualChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{8}
}

func (m *ListVirtualChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualChannelsRequest.Unmarshal(m, b)
}
func (m *ListVirtualChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualChannelsRequest.Marshal(b, m, deterministic)
}
func (m *ListVirtualChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualChannelsRequest.Merge(m, src)
}
func (m *ListVirtualChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_ListVirtualChannelsRequest.Size(m)
}
func (m *ListVirtualChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualChannelsRequest proto.InternalMessageInfo

type ListVirtualChannelsResponse struct {
	Channels             []*VirtualChannel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListVirtualChannelsResponse) Reset()         { *m = ListVirtualChannelsResponse{} }
func (m *ListVirtualChannelsResponse) String() string { return proto.CompactTextString(m) }
func (*ListVirtualChannelsResponse) ProtoMessage()    {}
func (*ListVirtualChannelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{9}
}

func (m *ListVirtualChannelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualChannelsResponse.Unmarshal(m, b)
}
func (m *ListVirtualChannelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualChannelsResponse.Marshal(b, m, deterministic)
}
func (m *ListVirtualChannelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualChannelsResponse.Merge(m, src)
}
func (m *ListVirtualChannelsResponse) XXX_Size() int {
	return xxx_messageInfo_ListVirtualChannelsResponse.Size(m)
}
func (m *ListVirtualChannelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualChannelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualChannelsResponse proto.InternalMessageInfo

func (m *ListVirtualChannelsResponse) GetChannels() []*VirtualChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

type VirtualChannel struct {
	NodePubKey           []byte   `protobuf:"bytes,1,opt,name=node_pub_key,json=nodePubKey,proto3" json:"node_pub_key,omitempty"`
	ChannelId            []byte   `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualChannel) Reset()         { *m = VirtualChannel{} }
func (m *VirtualChannel) String() string { return proto.CompactTextString(m) }
func (*VirtualChannel) ProtoMessage()    {}
func (*VirtualChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_67568afc06a5a11f, []int{10}
}

func (m *VirtualChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualChannel.Unmarshal(m, b)
}
func (m *VirtualChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualChannel.Marshal(b, m, deterministic)
}
func (m *VirtualChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualChannel.Merge(m, src)
}
func (m *VirtualChannel) XXX_Size() int {
	return xxx_messageInfo_VirtualChannel.Size(m)
}
func (m *VirtualChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualChannel.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualChannel proto.InternalMessageInfo

func (m *VirtualChannel) GetNodePubKey() []byte {
	if m != nil {
		return m.NodePubKey
	}
	return nil
}

func (m *VirtualChannel) GetChannelId() []byte {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateVirtualChannelRequest)(nil), "virtualchannelsrpc.CreateVirtualChannelRequest")
	proto.RegisterType((*CreateVirtualChannelResponse)(nil), "virtualchannelsrpc.CreateVirtualChannelResponse")
	proto.RegisterType((*SubscribeVirtualForwardRequest)(nil), "virtualchannelsrpc.SubscribeVirtualForwardRequest")
	proto.RegisterType((*VirtualForward)(nil), "virtualchannelsrpc.VirtualForward")
	proto.RegisterType((*SettleVirtualForwardRequest)(nil), "virtualchannelsrpc.SettleVirtualForwardRequest")
	proto.RegisterType((*SettleVirtualForwardResponse)(nil), "virtualchannelsrpc.SettleVirtualForwardResponse")
	proto.RegisterType((*DeleteVirtualChannelRequest)(nil), "virtualchannelsrpc.DeleteVirtualChannelRequest")
	proto.RegisterType((*DeleteVirtualChannelResponse)(nil), "virtualchannelsrpc.DeleteVirtualChannelResponse")
	proto.RegisterType((*ListVirtualChannelsRequest)(nil), "virtualchannelsrpc.ListVirtualChannelsRequest")
	proto.RegisterType((*ListVirtualChannelsResponse)(nil), "virtualchannelsrpc.ListVirtualChannelsResponse")
	proto.RegisterType((*VirtualChannel)(nil), "virtualchannelsrpc.VirtualChannel")
}

func init() {
	proto.RegisterFile("virtualchannelsrpc/virtualchannels.proto", fileDescriptor_67568afc06a5a11f)
}

var fileDescriptor_67568afc06a5a11f = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xdf, 0x6b, 0xd4, 0x40,
	0x10, 0xc7, 0x89, 0x57, 0xb4, 0x8e, 0x45, 0x61, 0x15, 0x0c, 0x49, 0x2d, 0x21, 0x4f, 0x79, 0x4a,
	0xca, 0xf9, 0x22, 0x3e, 0xf8, 0x60, 0x45, 0x10, 0x7d, 0xd0, 0x2b, 0x88, 0x08, 0xf6, 0xc8, 0x8f,
	0x21, 0x59, 0xba, 0xb7, 0x1b, 0x77, 0x37, 0x2d, 0xf7, 0x57, 0xfb, 0x2f, 0x48, 0x2e, 0x7b, 0x27,
	0x4d, 0xa7, 0xf1, 0x40, 0x7c, 0xcb, 0xee, 0x77, 0x76, 0xbe, 0x33, 0x93, 0xcf, 0x2e, 0x24, 0x57,
	0x5c, 0xdb, 0x2e, 0x17, 0x65, 0x93, 0x4b, 0x89, 0xc2, 0xe8, 0xb6, 0xcc, 0x46, 0x5b, 0x69, 0xab,
	0x95, 0x55, 0x8c, 0xdd, 0x8e, 0x8c, 0x2f, 0x20, 0x3c, 0xd3, 0x98, 0x5b, 0xfc, 0x3a, 0x68, 0x67,
	0x83, 0xb6, 0xc0, 0x9f, 0x1d, 0x1a, 0xcb, 0x22, 0x38, 0x92, 0xaa, 0xc2, 0x65, 0xdb, 0x15, 0xcb,
	0x4b, 0x5c, 0xfb, 0x5e, 0xe4, 0x25, 0x47, 0x0b, 0xe8, 0xf7, 0x3e, 0x77, 0xc5, 0x47, 0x5c, 0xb3,
	0x17, 0x00, 0x2e, 0xdf, 0x92, 0x57, 0xfe, 0xbd, 0x8d, 0xfe, 0xd0, 0xed, 0x7c, 0xa8, 0xe2, 0x13,
	0x38, 0xa6, 0xf3, 0x9b, 0x56, 0x49, 0x83, 0x71, 0x04, 0x27, 0xe7, 0x5d, 0x61, 0x4a, 0xcd, 0x8b,
	0x6d, 0xc8, 0x7b, 0xa5, 0xaf, 0x73, 0x5d, 0xb9, 0x12, 0xe2, 0x1f, 0xf0, 0xf8, 0xa6, 0x30, 0xb2,
	0xf4, 0x46, 0x96, 0x8c, 0xc1, 0x41, 0x63, 0x45, 0xe9, 0x6a, 0xd9, 0x7c, 0x33, 0x1f, 0x1e, 0x58,
	0xbe, 0x42, 0xd5, 0x59, 0x7f, 0x16, 0x79, 0xc9, 0x6c, 0xb1, 0x5d, 0xc6, 0xdf, 0x20, 0x3c, 0x47,
	0x6b, 0x05, 0xed, 0xfe, 0x37, 0xaf, 0x00, 0x0e, 0x5b, 0x8d, 0x7c, 0x95, 0xd7, 0xe8, 0xfc, 0x76,
	0xeb, 0xbe, 0x75, 0x3a, 0xb3, 0x6b, 0xfd, 0x02, 0xc2, 0x77, 0x28, 0xf0, 0x7f, 0x8e, 0x9e, 0xce,
	0xef, 0xfc, 0x8f, 0x21, 0xf8, 0xc4, 0x8d, 0xbd, 0xa9, 0x9a, 0x3f, 0x63, 0x0f, 0x49, 0x75, 0x38,
	0xcc, 0xde, 0xc0, 0xe1, 0x16, 0x23, 0xdf, 0x8b, 0x66, 0xc9, 0xa3, 0x79, 0x9c, 0xde, 0xc6, 0x2b,
	0x1d, 0x59, 0xef, 0xce, 0xc4, 0x5f, 0x76, 0x7f, 0xd5, 0x69, 0xff, 0xdc, 0xef, 0xfc, 0xd7, 0x01,
	0x3c, 0x19, 0x95, 0xcb, 0xd6, 0xf0, 0x8c, 0xc2, 0x8f, 0x65, 0x54, 0xb1, 0x13, 0x17, 0x21, 0x38,
	0xdd, 0xff, 0x80, 0x9b, 0x90, 0x81, 0xe7, 0x77, 0x90, 0xcd, 0xe6, 0x54, 0xb2, 0xe9, 0x6b, 0x10,
	0x4c, 0x8d, 0xd7, 0x85, 0x9e, 0x7a, 0x7d, 0xbf, 0x14, 0x73, 0x74, 0xbf, 0x13, 0xdc, 0xd3, 0xfd,
	0x4e, 0xe1, 0xdc, 0x5b, 0x53, 0xb8, 0xd1, 0xd6, 0x13, 0xe0, 0xd3, 0xd6, 0x53, 0x24, 0xb3, 0x2b,
	0x78, 0x4a, 0xb0, 0xca, 0x52, 0x2a, 0xd1, 0xdd, 0xc8, 0x07, 0xd9, 0xde, 0xf1, 0x83, 0xef, 0xdb,
	0xd7, 0xdf, 0x5f, 0xd5, 0xdc, 0x36, 0x5d, 0x91, 0x96, 0x6a, 0x95, 0x09, 0x5e, 0x37, 0x56, 0x72,
	0x59, 0x4b, 0xb4, 0xd7, 0x4a, 0x5f, 0x66, 0x42, 0x56, 0x99, 0x90, 0xc4, 0x7b, 0xac, 0xdb, 0xb2,
	0xb8, 0xbf, 0x79, 0x93, 0x5f, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x71, 0x8e, 0xff, 0xbf,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VirtualChannelsClient is the client API for VirtualChannels service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VirtualChannelsClient interface {
	CreateVirtualChannel(ctx context.Context, in *CreateVirtualChannelRequest, opts ...grpc.CallOption) (*CreateVirtualChannelResponse, error)
	SubscribeVirtualForward(ctx context.Context, in *SubscribeVirtualForwardRequest, opts ...grpc.CallOption) (VirtualChannels_SubscribeVirtualForwardClient, error)
	SettleVirtualForward(ctx context.Context, in *SettleVirtualForwardRequest, opts ...grpc.CallOption) (*SettleVirtualForwardResponse, error)
	DeleteVirtualChannel(ctx context.Context, in *DeleteVirtualChannelRequest, opts ...grpc.CallOption) (*DeleteVirtualChannelResponse, error)
	ListVirtualChannels(ctx context.Context, in *ListVirtualChannelsRequest, opts ...grpc.CallOption) (*ListVirtualChannelsResponse, error)
}

type virtualChannelsClient struct {
	cc *grpc.ClientConn
}

func NewVirtualChannelsClient(cc *grpc.ClientConn) VirtualChannelsClient {
	return &virtualChannelsClient{cc}
}

func (c *virtualChannelsClient) CreateVirtualChannel(ctx context.Context, in *CreateVirtualChannelRequest, opts ...grpc.CallOption) (*CreateVirtualChannelResponse, error) {
	out := new(CreateVirtualChannelResponse)
	err := c.cc.Invoke(ctx, "/virtualchannelsrpc.VirtualChannels/CreateVirtualChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualChannelsClient) SubscribeVirtualForward(ctx context.Context, in *SubscribeVirtualForwardRequest, opts ...grpc.CallOption) (VirtualChannels_SubscribeVirtualForwardClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VirtualChannels_serviceDesc.Streams[0], "/virtualchannelsrpc.VirtualChannels/SubscribeVirtualForward", opts...)
	if err != nil {
		return nil, err
	}
	x := &virtualChannelsSubscribeVirtualForwardClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VirtualChannels_SubscribeVirtualForwardClient interface {
	Recv() (*VirtualForward, error)
	grpc.ClientStream
}

type virtualChannelsSubscribeVirtualForwardClient struct {
	grpc.ClientStream
}

func (x *virtualChannelsSubscribeVirtualForwardClient) Recv() (*VirtualForward, error) {
	m := new(VirtualForward)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *virtualChannelsClient) SettleVirtualForward(ctx context.Context, in *SettleVirtualForwardRequest, opts ...grpc.CallOption) (*SettleVirtualForwardResponse, error) {
	out := new(SettleVirtualForwardResponse)
	err := c.cc.Invoke(ctx, "/virtualchannelsrpc.VirtualChannels/SettleVirtualForward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualChannelsClient) DeleteVirtualChannel(ctx context.Context, in *DeleteVirtualChannelRequest, opts ...grpc.CallOption) (*DeleteVirtualChannelResponse, error) {
	out := new(DeleteVirtualChannelResponse)
	err := c.cc.Invoke(ctx, "/virtualchannelsrpc.VirtualChannels/DeleteVirtualChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualChannelsClient) ListVirtualChannels(ctx context.Context, in *ListVirtualChannelsRequest, opts ...grpc.CallOption) (*ListVirtualChannelsResponse, error) {
	out := new(ListVirtualChannelsResponse)
	err := c.cc.Invoke(ctx, "/virtualchannelsrpc.VirtualChannels/ListVirtualChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualChannelsServer is the server API for VirtualChannels service.
type VirtualChannelsServer interface {
	CreateVirtualChannel(context.Context, *CreateVirtualChannelRequest) (*CreateVirtualChannelResponse, error)
	SubscribeVirtualForward(*SubscribeVirtualForwardRequest, VirtualChannels_SubscribeVirtualForwardServer) error
	SettleVirtualForward(context.Context, *SettleVirtualForwardRequest) (*SettleVirtualForwardResponse, error)
	DeleteVirtualChannel(context.Context, *DeleteVirtualChannelRequest) (*DeleteVirtualChannelResponse, error)
	ListVirtualChannels(context.Context, *ListVirtualChannelsRequest) (*ListVirtualChannelsResponse, error)
}

// UnimplementedVirtualChannelsServer can be embedded to have forward compatible implementations.
type UnimplementedVirtualChannelsServer struct {
}

func (*UnimplementedVirtualChannelsServer) CreateVirtualChannel(ctx context.Context, req *CreateVirtualChannelRequest) (*CreateVirtualChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtualChannel not implemented")
}
func (*UnimplementedVirtualChannelsServer) SubscribeVirtualForward(req *SubscribeVirtualForwardRequest, srv VirtualChannels_SubscribeVirtualForwardServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeVirtualForward not implemented")
}
func (*UnimplementedVirtualChannelsServer) SettleVirtualForward(ctx context.Context, req *SettleVirtualForwardRequest) (*SettleVirtualForwardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SettleVirtualForward not implemented")
}
func (*UnimplementedVirtualChannelsServer) DeleteVirtualChannel(ctx context.Context, req *DeleteVirtualChannelRequest) (*DeleteVirtualChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtualChannel not implemented")
}
func (*UnimplementedVirtualChannelsServer) ListVirtualChannels(ctx context.Context, req *ListVirtualChannelsRequest) (*ListVirtualChannelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVirtualChannels not implemented")
}

func RegisterVirtualChannelsServer(s *grpc.Server, srv VirtualChannelsServer) {
	s.RegisterService(&_VirtualChannels_serviceDesc, srv)
}

func _VirtualChannels_CreateVirtualChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtualChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualChannelsServer).CreateVirtualChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/virtualchannelsrpc.VirtualChannels/CreateVirtualChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualChannelsServer).CreateVirtualChannel(ctx, req.(*CreateVirtualChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualChannels_SubscribeVirtualForward_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeVirtualForwardRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VirtualChannelsServer).SubscribeVirtualForward(m, &virtualChannelsSubscribeVirtualForwardServer{stream})
}

type VirtualChannels_SubscribeVirtualForwardServer interface {
	Send(*VirtualForward) error
	grpc.ServerStream
}

type virtualChannelsSubscribeVirtualForwardServer struct {
	grpc.ServerStream
}

func (x *virtualChannelsSubscribeVirtualForwardServer) Send(m *VirtualForward) error {
	return x.ServerStream.SendMsg(m)
}

func _VirtualChannels_SettleVirtualForward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettleVirtualForwardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualChannelsServer).SettleVirtualForward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/virtualchannelsrpc.VirtualChannels/SettleVirtualForward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualChannelsServer).SettleVirtualForward(ctx, req.(*SettleVirtualForwardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualChannels_DeleteVirtualChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtualChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualChannelsServer).DeleteVirtualChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/virtualchannelsrpc.VirtualChannels/DeleteVirtualChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualChannelsServer).DeleteVirtualChannel(ctx, req.(*DeleteVirtualChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualChannels_ListVirtualChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtualChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualChannelsServer).ListVirtualChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/virtualchannelsrpc.VirtualChannels/ListVirtualChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualChannelsServer).ListVirtualChannels(ctx, req.(*ListVirtualChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VirtualChannels_serviceDesc = grpc.ServiceDesc{
	ServiceName: "virtualchannelsrpc.VirtualChannels",
	HandlerType: (*VirtualChannelsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVirtualChannel",
			Handler:    _VirtualChannels_CreateVirtualChannel_Handler,
		},
		{
			MethodName: "SettleVirtualForward",
			Handler:    _VirtualChannels_SettleVirtualForward_Handler,
		},
		{
			MethodName: "DeleteVirtualChannel",
			Handler:    _VirtualChannels_DeleteVirtualChannel_Handler,
		},
		{
			MethodName: "ListVirtualChannels",
			Handler:    _VirtualChannels_ListVirtualChannels_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeVirtualForward",
			Handler:       _VirtualChannels_SubscribeVirtualForward_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "virtualchannelsrpc/virtualchannels.proto",
}
